import Data_Utils
from sklearn import svm
import numpy as np
from helpers import load_data_as_x_and_y
from evaluate import get_accuracy, fit_classifier, get_diff
# from evolve import ElitistGA, SteadyStateGA, EstimationGA
from evolve_samples import SteadyStateGA, ElitistGA, EDA
# BEST_MASK = [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0]
# BEST_MASK = [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]
BEST_MASK = [1] * 100
GOAL = [1,0,1,0,0,1]
best_samp_onehot_casis = [1.91080089e+17, -296014175000000.0, 505762803000000.0, -10386124100000.0, 1682728170000000.0, 146571461000000.0, -1616165290000000.0, -591460598000000.0, -1670888760000000.0, -348768483000000.0, 84855968600000.0, 33206653200000.0, 8623787600000000.0, 1.27137963e+16, 2749241100000000.0, -7827820350000000.0, -2203659710000000.0, -1686346100000000.0, 6977527070000000.0, -1230047900000000.0, -60507226700000.0, 609734496000000.0, 1840568560000000.0, 4477835660000000.0, 2524541320000000.0, -872827051000000.0, 915575517000000.0, 4009305220000000.0, 220410761000000.0, 97824059900000.0, -85712514500000.0, -2903498630000000.0, -138861402000000.0, -56884287900000.0, -1.27271047e+16, 1462253730000000.0, 1159199250000000.0, 7438951250000000.0, -2909303510000000.0, 956280466000000.0, -2359198740000000.0, -5687704920000000.0, -1559596220000000.0, -2968750430000000.0, 5045545490000000.0, 5478909980000000.0, 8815297070000000.0, -8542273990000000.0, -4108465490000000.0, -2265512580000000.0, 5583590070000000.0]
best_samp_onehot_sports = [0.2478656, 0.0936491613, 0.146154899, -0.616239115, -0.0676852701,0.0314594321, -0.062472299, 0.0266868244, 0.0557231351, 0.0962208172, -0.51868967, 0.144170175, 0.41152553, 0.63092986, 0.843569879, -1.17178553, -0.324357615, -1.03853345, 0.509681213, -0.0108362439, -0.191456799, -0.41166593, -1.12937089, -1.08266555, -0.605527415, -0.382438085, -0.159231902, 0.178827082, -1.37806958, 0.929191059, -0.396564223, -0.203173118, -0.372992455, -0.037132484, 0.237441406, -0.140824174, 0.175776102, -0.0370993897, 0.0940545608, 0.117958966, 0.267278307, -0.0618904933, -0.000849239039, 0.0682103724, 0.205199767, 0.09631816, 0.0489789976, -0.0199962545, 0.166031098, -0.0962530857, 0.234252769, 0.126791331, -0.0196909814, 0.0485907327, -0.123515334, -0.153946325, -0.0255186808, -0.0227639215, 0.0501364866, -0.00246534195, -0.0313747701, 0.0, 0.0245147013, -0.269422753, 0.0, 0.0, -0.00946942881, 0.081082666, -0.0478439318, -0.0184834487, 0.184016993, 0.0, 0.000585433022, 0.751656557, 0.0335106829, 0.0942834679, 0.00952756969, -0.0482582922, 0.0175314886, 0.0, 0.0, 0.0, -0.00269527623, 0.0268516828, 0.00217511607, 0.0, -0.00212376435, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.68598774, 0.0, -0.63504824, 0.0, 0.0, 0.0]
best_samp_twohot_casis = [-1.80303421e+17, 221836336000000.0, 4250809610000000.0, 37421187500000.0, 210021040000000.0, 1432561690000.0, 1096891540000000.0, 1513638770000000.0, 270658617000000.0, 1447984800000000.0, -3160479670000.0, 24797601500000.0, 3836947670000000.0, -1635485680000000.0, -4607946680000000.0, -139360552000000.0, -1952427290000000.0, 766299082000000.0, -591674445000000.0, -527089132000000.0, -382311606000000.0, 360886105000000.0, -83601347000000.0, -625310071000000.0, 625339134000000.0, 59446518000000.0, 834775424000000.0, 478647961000000.0, 112836303000000.0, 19334589400000.0, -24868285000000.0, -516449966000000.0, 35423438500000.0, -6004843840000000.0, -2973767970000000.0, -399830689000000.0, 961605523000000.0, -1095741800000000.0, -2653351200000000.0, 3063322320000000.0, -3658830310000000.0, -3476955730000000.0, 6277693490000000.0, 4973880910000000.0, -885797148000000.0, -1168459310000000.0, -805636505000000.0, 359238991000000.0, -3489977310000000.0, 1382563150000000.0, 3592011190000000.0]
best_samp_twohot_sports = [0.0102769128, 0.00959128401, 0.00559280225, 0.010926068, 0.00865290435, 0.00773617994, 0.00363192238, 0.00709649304, 0.00332049016, 0.00509915694, 0.0859125344, 0.0526173603, 0.0825408709, 0.103107078, 0.37933068, -211.07779, 0.0955826445, 138.754103, 0.241091416, 0.0015244321, 0.0442069593, 0.112583391, 0.0651905684, 0.233118289, 0.211492221, 0.0598735053, 0.00230510211, 227.485445, -28.2724963, 0.213842244, 0.0990022789, 0.0322620623, 0.0328883259, 0.00855515291, 0.0677074676, 0.0038630006, 0.0165052917, 0.00365778738, 0.0115829832, 0.0135738985, 0.00436094375, 0.00342072619, 0.00286586204, 0.0100823665, 0.0197426248, 0.00541267565, 0.00151041272, 0.00144073209, 0.00936369539, 0.0059014879, 0.00614298701, 0.000239854626, 0.000883049722, 0.00511949986, 0.01105606, 0.0125073462, 0.00116241826, 5.18901271e-07, 0.00238538343, -6.88921515e-05, 0.000308142286, 0.0, 0.000199774547, 0.00858015091, 0.0, 0.0, -0.00057694521, 0.000873434671, 0.0117745659, 0.00144544883, 0.00278023522, 0.0, 0.000312741729, 0.0367203638, 0.0129519313, 0.0306838168, -0.000258398053, 0.00495747412, -0.000177004489, 0.0, 0.0, 0.0, -0.000457863981, 0.000218524094, -4.92246385e-05, 0.0, -0.00012954812, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -160.565479, 0.0, -168.413115, 0.0, 0.0, 0.0]
best_samp_threehot_casis = [-2.52981903e+18, -329252242000000.0, 832866437000000.0, 326691860000000.0, 1511455500000000.0, 1116652460000000.0, 74797712800000.0, -8593547070000000.0, 2343239560000000.0, -371177939000000.0, 683203077000000.0, -127323334000000.0, 8925588510000.0, -7389575930000000.0, 3.73877994e+16, -4710155860000000.0, 9940903830000000.0, 1447731140000000.0, -1459324450000000.0, -2067604090000000.0, -1.28596101e+16, 1747668450000000.0, 740000385000000.0, -3187931150000000.0, -6019766120000000.0, -8557241810000000.0, 1077494640000000.0, 1.45494806e+16, -1549993780000000.0, -43102567600000.0, 370857248000000.0, -8384743490000000.0, 33051652200000.0, -3.88795698e+16, 3.21766324e+16, 2.08234104e+16, -1.0426388e+16, 4419843140000000.0, 4710691930000000.0, -4551592660000000.0, 6492090810000000.0, -1.52466148e+16, 3531172360000000.0, -1.88940392e+16, 4824575030000000.0, -1.00584406e+16, -1.25055342e+16, 1.60379007e+16, -6828158530000000.0, 1.04569986e+16, -8915942630000000.0]
best_samp_threehot_sports = [-0.0315454982, 0.00592916021, 0.00483190669, -0.00339308445, 0.00861514713, 0.0075704996, 0.0201158407, 0.00279872984, 0.00794520748, -0.00609975136, -143.082941, 0.037923228, 0.39608172, -1.05805898, 0.108806857, 0.0400331048, -0.0197217076, 39.8349905, 206.355341, 0.00499617467, 0.0436102222, 0.130448605, 0.0679785511, 0.109898454, 0.220923534, 0.0489044166, 0.000717652959, -93.9372246, -54.4304985, -231.172274, 0.673220023, 0.619001783, 0.0562114228, 0.00502156308, 0.0622445351, -0.0150584244, 0.0229280681, 0.00552844273, -0.011137453, -0.0168606351, 0.00250509732, 0.00670269795, 0.000616389103, 0.0146327564, 0.0126867335, 0.00254002481, 0.00161644721, 0.00105412663,-0.00875180751, -0.00752882245, -0.0316482663, 0.00243783282, 0.00211652193, 0.00161982331, 0.0236099204, 0.00646565301, 0.00130549187,-0.00129712522, 0.00507743827, 0.000415348581, -0.00129248513, 0.0,0.000356713682, 0.988136818, 0.0, 0.0, -0.00208654904, 0.000384810179, 0.0539852367, 0.00293471745, 0.00921959805, 0.0, -0.000837435989, -0.00932768408, -0.0426644973, 0.519341376, 0.00383990032, 0.00375671251, 0.000790781367, 0.0, 0.0, 0.0, 0.00293052094, -0.000468731574, -1.02233849e-05, 0.0, -2.33979358e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.454915969, 0.0, 153.51077, 0.0, 0.0, 0.0]

classifier = svm.LinearSVC()
# print(len(best_samp_onehot_sports))
CU_X, Y = load_data_as_x_and_y("sports_writers")
print(len(CU_X[0]), len(BEST_MASK))
fit_classifier(classifier, CU_X, Y, BEST_MASK)
a = classifier.decision_function([best_samp_threehot_sports])
a = a / np.linalg.norm(a)
for i in a[0]:
    print(float(i))
# ga = EDA(pop_size=100)
# for i in range(1):
#     ga.evolve(CU_X,BEST_MASK, get_diff, classifier, GOAL, i)
# # print(get_accuracy(classifier, CU_X, Y))